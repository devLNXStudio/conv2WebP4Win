<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnInstall" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="convBadFormat" xml:space="preserve">
    <value>The file is not a supported image format (JPG/JPEG or PNG).</value>
  </data>
  <data name="convFileExists" xml:space="preserve">
    <value>File {0} already exists. Do you want to overwrite it?</value>
  </data>
  <data name="convRunError" xml:space="preserve">
    <value>An error occurred during conversion:\n\n{0}</value>
  </data>
  <data name="convSuccessConv" xml:space="preserve">
    <value>File successfully converted to WebP:\n{0}</value>
  </data>
  <data name="genErrFileExists" xml:space="preserve">
    <value>File Exists</value>
  </data>
  <data name="genError" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="genErrorMsg" xml:space="preserve">
    <value>An error occurred during installation:\n\n{0}</value>
  </data>
  <data name="genFailed" xml:space="preserve">
    <value>Installation failed.</value>
  </data>
  <data name="genIMError" xml:space="preserve">
    <value>ImageMagick installation failed.</value>
  </data>
  <data name="genSuccess" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="labelReady" xml:space="preserve">
    <value>Ready to install</value>
  </data>
  <data name="labelSTitle" xml:space="preserve">
    <value>This application will install a graphics converter to WebP format and add the appropriate items to the Windows context menu.</value>
  </data>
  <data name="labelTitle" xml:space="preserve">
    <value>JPG/PNG to WebP Converter - Installer</value>
  </data>
  <data name="msgAdmin" xml:space="preserve">
    <value>This application requires administrator privileges. Restart as administrator.</value>
  </data>
  <data name="msgFileNotExists" xml:space="preserve">
    <value>File does not exist: {0}</value>
  </data>
  <data name="msgSuccess" xml:space="preserve">
    <value>Installation completed successfully!\n\nYou can now convert JPG and PNG files to WebP format via the context menu.</value>
  </data>
  <data name="regEntry" xml:space="preserve">
    <value>Convert to WebP</value>
  </data>
  <data name="statUpd" xml:space="preserve">
    <value>Creating installation directory...</value>
  </data>
  <data name="statUpd1" xml:space="preserve">
    <value>Creating converter file...</value>
  </data>
  <data name="statUpd2" xml:space="preserve">
    <value>Adding entries to the Windows registry...</value>
  </data>
  <data name="statUpd3" xml:space="preserve">
    <value>Installation completed successfully!</value>
  </data>
  <data name="statUpdIM" xml:space="preserve">
    <value>Checking if ImageMagick is installed...</value>
  </data>
  <data name="statUpdIM2" xml:space="preserve">
    <value>Downloading ImageMagick...</value>
  </data>
  <data name="statUpdIM3" xml:space="preserve">
    <value>Installing ImageMagick...</value>
  </data>
  <data name="statUpdIM4" xml:space="preserve">
    <value>ImageMagick already installed</value>
  </data>
</root>