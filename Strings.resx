<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="btnInstall" xml:space="preserve">
    <value>Zainstaluj</value>
  </data>
  <data name="convBadFormat" xml:space="preserve">
    <value>Plik nie jest obsługiwanym formatem graficznym (JPG/JPEG lub PNG).</value>
  </data>
  <data name="convFileExists" xml:space="preserve">
    <value>Plik {0} już istnieje. Czy chcesz go nadpisać?</value>
  </data>
  <data name="convRunError" xml:space="preserve">
    <value>Wystąpił błąd podczas konwersji:\n\n{0}</value>
  </data>
  <data name="convSuccessConv" xml:space="preserve">
    <value>Plik został pomyślnie przekonwertowany do WebP:\n{0}</value>
  </data>
  <data name="genErrFileExists" xml:space="preserve">
    <value>Plik Istnieje</value>
  </data>
  <data name="genError" xml:space="preserve">
    <value>Błąd</value>
  </data>
  <data name="genErrorMsg" xml:space="preserve">
    <value>Wystąpił błąd podczas instalacji:\n\n{0}</value>
  </data>
  <data name="genFailed" xml:space="preserve">
    <value>Instalacja nie powiodła się.</value>
  </data>
  <data name="genIMError" xml:space="preserve">
    <value>Instalacja ImageMagick nie powiedła się.</value>
  </data>
  <data name="genSuccess" xml:space="preserve">
    <value>Sukces</value>
  </data>
  <data name="labelReady" xml:space="preserve">
    <value>Gotowy do instalacji</value>
  </data>
  <data name="labelSTitle" xml:space="preserve">
    <value>Ta aplikacja zainstaluje konwerter grafiki do formatu WebP i doda odpowiednie pozycje do menu kontekstowego Windows.</value>
  </data>
  <data name="labelTitle" xml:space="preserve">
    <value>Konwerter JPG/PNG do WebP - Instalator</value>
  </data>
  <data name="msgAdmin" xml:space="preserve">
    <value>Ta aplikacja wymaga uprawnień administratora. Uruchom ponownie jako administrator.</value>
  </data>
  <data name="msgFileNotExists" xml:space="preserve">
    <value>Plik nie istnieje: {0}</value>
  </data>
  <data name="msgSuccess" xml:space="preserve">
    <value>Instalacja zakończona pomyślnie!\n\nMożesz teraz konwertować pliki JPG i PNG do formatu WebP poprzez menu kontekstowe.</value>
  </data>
  <data name="regEntry" xml:space="preserve">
    <value>Konwertuj do WebP</value>
  </data>
  <data name="statUpd" xml:space="preserve">
    <value>Tworzenie katalogu instalacyjnego...</value>
  </data>
  <data name="statUpd1" xml:space="preserve">
    <value>Tworzenie pliku konwertera...</value>
  </data>
  <data name="statUpd2" xml:space="preserve">
    <value>Dodawanie wpisów do rejestru Windows...</value>
  </data>
  <data name="statUpd3" xml:space="preserve">
    <value>Instalacja zakończona pomyślnie!</value>
  </data>
  <data name="statUpdIM" xml:space="preserve">
    <value>Sprawdzanie, czy ImageMagick jest zainstalowany...</value>
  </data>
  <data name="statUpdIM2" xml:space="preserve">
    <value>Pobieranie ImageMagick...</value>
  </data>
  <data name="statUpdIM3" xml:space="preserve">
    <value>Instalowanie ImageMagick...</value>
  </data>
  <data name="statUpdIM4" xml:space="preserve">
    <value>ImageMagick jest już zainstalowany.</value>
  </data>
</root>